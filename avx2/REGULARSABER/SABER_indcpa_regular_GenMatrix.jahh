/*** SABER_indcpa_regular_GenMatrix.jahh: File containing the Jasmin implementation of the GenMatrix function from SABER_indcpa.c, with (regular) SABER parameters ***/

#ifndef GENMATRIX_HH
#define GENMATRIX_HH

#include "SABER_params.jahh"
#include "fips202_regular_shake128_KK13N8_32.jahh"
#include "SABER_indcpa_regular_BS2POLq.jahh"

fn GenMatrix(reg ptr u16[SABER_KKN] a, reg ptr u8[SABER_SEEDBYTES] seed) -> reg ptr u16[SABER_KKN]
{
	inline int i;
	inline int k;

	reg u16 t16;

	reg u256 qmod;
	reg u256 t256;

	stack u8[KK13N8] buf;

	stack ptr u16[SABER_KKN] sa;

	qmod = modq_16u16;
	
	sa = a;

	buf = shake128_KK13N8_32(buf, seed);

	a = sa;


	for i = 0 to SABER_K * SABER_K {
		a[i * SABER_N:SABER_N] =  BS2POLq(buf[i * (13 * SABER_N / 8):SABER_POLYBYTES], a[i * SABER_N:SABER_N]);
	}
	
	
	for k = 0 to SABER_KKN / 16 {
		t256 = qmod & a[u256 k];
		a[u256 k] = t256;
	}
	return a;
}

#endif

