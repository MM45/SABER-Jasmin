/*** poly_regular_GenSecret.jahh: File containing the Jasmin implementation of GenSecret function from poly.c, with (regular) SABER parameters ***/

#ifndef GENSECRET_HH
#define GENSECRET_HH

#include "SABER_params.jahh"
#include "fips202_regular_shake128_MUNK8_32.jahh"
#include "cbd_regular_cbd.jahh"

fn GenSecret(reg ptr u16[SABER_KN] r, reg ptr u8[SABER_COINBYTES] seed) -> reg ptr u16[SABER_KN]
{
	inline int i;

	stack u8[MUNK8] buf;

	stack ptr u16[SABER_KN] sr;

	sr = r;
	
	buf = shake128_MUNK8_32(buf, seed);

	r = sr;

	for i = 0 to SABER_K {
		r[i * SABER_N:SABER_N] = cbd(r[i * SABER_N:SABER_N], buf[i * SABER_MU * SABER_N / 8:SABER_N]);
	}

	return r;
}


#endif