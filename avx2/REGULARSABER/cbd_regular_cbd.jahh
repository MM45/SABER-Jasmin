/*** cbd_regular_cbd.jahh: File containing the Jasmin implementation of cbd function from cbd.c, with (regular) SABER parameters ***/

#ifndef CBD_HH
#define CBD_HH

#include "SABER_params.jahh"

fn cbd(reg ptr u16[SABER_N] r, reg ptr u8[SABER_N] buf) -> reg ptr u16[SABER_N]
{
    inline int i;

    reg u128 t0, t1;

    reg u256 three_mask;
    reg u256 five_mask;
    reg u256 fourbit_mask;

    reg u256 f0, f1;

    three_mask = three_mask_64u4;
    five_mask = five_mask_64u4;
    fourbit_mask = fourbit_mask_32u8;

    for i = 0 to SABER_N / 32 {
        f0 = buf[u256 i];

        f1 = f0 >>8u32 1;
        f0 &= five_mask; 
        f1 &= five_mask;
        f0 +8u32= f1;

        f1 = f0 >>8u32 2;
        f0 &= three_mask; 
        f1 &= three_mask;
        f0 +8u32= f1;

        f1 = f0 >>8u32 4;
        f0 &= fourbit_mask; 
        f1 &= fourbit_mask;
        f1 = f0 -32u8 f1;

        t0 = #VEXTRACTI128(f1, 0);
        t1 = #VEXTRACTI128(f1, 1);

        f0 = #VPMOVSX_16u8_16u16(t0);
        f1 = #VPMOVSX_16u8_16u16(t1);

        r[u256 2 * i] = f0;
        r[u256 2 * i + 1] = f1;
    } 

	return r;
}

#endif