/*** fips202_regular_sha3_512_64.jahh: File containing the Jasmin implementation of sha3_512 function from fips202.c, where inlen == 64 and with (regular) SABER parameters ***/

#ifndef SHA3_512_64_HH
#define SHA3_512_64_HH

#include "SABER_params.jahh"
#include "fips202_regular_KeccakF1600_StatePermute.jahh"

inline fn sha3_512_64(reg ptr u8[64] output, reg ptr u8[64] input) -> reg ptr u8[64]
{
	inline int i;

	reg u8 t8;

	stack u64[25] s;

	for i = 0 to 25 {
		s[i] = 0;
	}

	//s = keccak_absorb_512_64(s, input);
	for i = 0 to 64 {
		t8 = input[i];
		s[u8 i] ^= t8; 
	}

	s[u8 64] ^= 0x06;
	s[u8 SHA3_512_RATE - 1] ^= 0x80;
	
	//t, s = keccak_squeezeblocks_512_512(t, s);
	s = KeccakF1600_StatePermute(s);

	for i = 0 to 64 {
		t8 = s[u8 i];
		output[i] = t8;
	}
	
	return output;
}

#endif