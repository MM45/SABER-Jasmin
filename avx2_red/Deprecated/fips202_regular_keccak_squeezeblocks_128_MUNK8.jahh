/*** fips202_regular_keccak_squeezeblocks_128_MUNK8.jahh: File containing the Jasmin implementation of keccak_squeezeblocks function from fips202.c, where rate == SHAKE128_RATE, outlen == MUNK8 and with (regular) SABER parameters ***/

#ifndef KECCAK_SQUEEZEBLOCKS_128_MUNK8_HH
#define KECCAK_SQUEEZEBLOCKS_128_MUNK8_HH

#include "SABER_params.jahh"
#include "fips202_regular_KeccakF1600_StatePermute.jahh"
#include "fips202_regular_store64.jahh"

inline fn keccak_squeezeblocks_128_MUNK8(reg ptr u8[MUNK8] h, reg ptr u64[25] s) -> reg ptr u8[MUNK8], reg ptr u64[25]
{
	inline int i;
	inline int j;
	inline int iterations;

	reg u64 u;

	iterations = MUNK8 / SHAKE128_RATE;

	for j = 0 to iterations {
		s = KeccakF1600_StatePermute(s);

		for i = 0 to (SHAKE128_RATE / 8) {
			u = s[i];
			h[j * SHAKE128_RATE + 8 * i:8] = store64(h[j * SHAKE128_RATE + 8 * i:8], u);
		}
	}

	return h, s;
}

#endif