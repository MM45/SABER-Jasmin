/*** fips202x4_regular_keccak_squeezeblocks4x_512_512.jahh: File containing the Jasmin implementation of keccak_squeezeblocks4x function from fips202x4.c, where rate == SHAKE128, outlen == SHA3256 and with (regular) SABER parameters ***/

#ifndef KECCAK_SQUEEZEBLOCKS4X_512_512_HH
#define KECCAK_SQUEEZEBLOCKS4X_512_512_HH

#include "SABER_params.jahh"
#include "fips202x4_regular_KeccakF1600_StatePermute4x.jahh"
#include "fips202x4_regular_store64.jahh"

inline fn keccak_squeezeblocks4x_512_512(reg ptr u8[SHA3_512_RATE] h0, reg ptr u8[SHA3_512_RATE] h1, reg ptr u8[SHA3_512_RATE] h2, reg ptr u8[SHA3_512_RATE] h3, reg ptr u256[25] s) -> reg ptr u8[SHA3_512_RATE], reg ptr u8[SHA3_512_RATE], reg ptr u8[SHA3_512_RATE], reg ptr u8[SHA3_512_RATE], reg ptr u256[25]
{
	inline int i;

	reg u64 t64;

	s = KeccakF1600_StatePermute4x(s);

	for i = 0 to (SHA3_512_RATE / 8) {
		t64 = s[u64 4 * i];
		h0[u64 i] = t64;
		t64 = s[u64 4 * i + 1];
		h1[u64 i] = t64;
		t64 = s[u64 4 * i + 2];
		h2[u64 i] = t64;
		t64 = s[u64 4 * i + 3];
		h3[u64 i] = t64;
	}

	return h0, h1, h2, h3, s;
}

#endif