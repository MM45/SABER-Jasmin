/*** polyvec_ntt_regular_polyvec_crt.jahh: File containing the Jasmin implementation of polyvec_crt function from polyvec_ntt.c, with (regular) SABER parameters ***/

#ifndef POLYVEC_CRT_HH
#define POLYVEC_CRT_HH

#include "SABER_params.jahh"
#include "consts256.jahh"
#include "poly_ntt_regular_poly_crt.jahh"

inline fn polyvec_crt(reg ptr u16[SABER_KN] r, reg ptr u16[SABER_KN] a, reg ptr u16[SABER_KN] b) -> reg ptr u16[SABER_KN]
{
	inline int i;

	for i = 0 to SABER_K {
		r[i * SABER_N:SABER_N] = poly_crt(r[i * SABER_N:SABER_N], a[i * SABER_N:SABER_N], b[i * SABER_N:SABER_N]);
	}

	return r;
}

#endif