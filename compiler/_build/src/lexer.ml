# 1 "src/lexer.mll"
 
  open Utils
  open Parser

  module L = Location
  module S = Syntax

  let unterminated_comment loc =
    raise (S.ParseError (loc, Some "unterminated comment"))

  let invalid_char loc (c : char) =
    let msg = Printf.sprintf "invalid char: `%c'" c in
    raise (S.ParseError (loc, Some msg))

  let _keywords = [
    "u8"    , T_U8   ;
    "u16"   , T_U16  ;
    "u32"   , T_U32  ;
    "u64"   , T_U64  ;
    "u128"  , T_U128 ;
    "u256"  , T_U256 ;

    "bool"  , T_BOOL ;
    "int"   , T_INT  ;

    "align" , ALIGN  ;
    "const" , CONSTANT;    
    "downto", DOWNTO ;
    "else"  , ELSE   ;
    "exec"  , EXEC   ;
    "false" , FALSE  ;
    "fn"    , FN     ;
    "for"   , FOR    ;
    "global", GLOBAL ;
    "if"    , IF     ;
    "inline", INLINE ;
    "mut"   , MUTABLE;
    "param" , PARAM  ;
    "ptr"   , POINTER;
    "reg"   , REG    ;
    "return", RETURN ;
    "stack" , STACK  ;
    "to"    , TO     ;
    "true"  , TRUE   ;
    "while" , WHILE  ;
    "export", EXPORT ;
    "ArrayInit", ARRAYINIT;
    "_"     , UNDERSCORE;
  ]

  let keywords = Hash.of_enum (List.enum _keywords)

  let sign_of_char =
  function
  | 'u' -> `Unsigned
  | 's' -> `Signed
  | _ -> assert false

  let mk_sign : char option -> S.sign =
  function
  | Some c -> sign_of_char c
  | None   -> `Unsigned 

  let size_of_string =
  function
  | "8" -> `W8
  | "16" -> `W16
  | "32" -> `W32
  | "64" -> `W64
  | "128" -> `W128
  | "256" -> `W256
  | _ -> assert false

  let mksizesign sw s = size_of_string sw, sign_of_char s

  let mk_gensize = function
    | "1"   -> `W1 
    | "2"   -> `W2
    | "4"   -> `W4
    | "8"   -> `W8
    | "16"  -> `W16
    | "32"  -> `W32
    | "64"  -> `W64
    | "128" -> `W128
    | _     -> assert false


  let mk_vsize   = function
    | "2"  -> `V2  
    | "4"  -> `V4
    | "8"  -> `V8
    | "16" -> `V16 
    | "32" -> `V32
    | _    ->  assert false 
 
  let mkvsizesign r s g = mk_vsize r, sign_of_char s, mk_gensize g


# 101 "src/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\209\255\210\255\003\000\216\255\001\000\002\000\219\255\
    \221\255\223\255\031\000\225\255\066\000\069\000\232\255\233\255\
    \234\255\235\255\034\000\237\255\238\255\239\255\240\255\241\255\
    \242\255\040\000\090\000\165\000\175\000\185\000\195\000\209\000\
    \219\000\229\000\255\000\098\000\106\000\026\001\255\255\123\000\
    \253\255\251\255\252\255\250\255\100\000\011\001\076\001\033\001\
    \083\000\086\000\245\255\100\000\081\000\099\001\109\001\246\255\
    \043\001\131\001\244\255\236\255\229\255\034\000\231\255\230\255\
    \226\255\138\000\172\000\228\255\227\255\211\255\214\255\215\255\
    \212\255\027\001\251\255\252\255\253\255\110\000\135\000\255\255\
    \254\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\042\000\255\255\038\000\037\000\255\255\
    \255\255\255\255\031\000\255\255\029\000\026\000\255\255\255\255\
    \255\255\255\255\033\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\012\000\008\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\045\000\035\000\001\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\007\000\009\000\
    \255\255\255\255\255\255\010\000\255\255\006\000\006\000\255\255\
    \255\255\006\000\255\255\255\255\255\255\025\000\255\255\255\255\
    \255\255\028\000\027\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\003\000\003\000\255\255\
    \255\255";
  Lexing.lex_default =
   "\002\000\000\000\000\000\255\255\000\000\255\255\255\255\000\000\
    \000\000\000\000\255\255\000\000\255\255\255\255\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\044\000\255\255\255\255\000\000\039\000\
    \000\000\000\000\000\000\000\000\044\000\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\255\255\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\075\000\000\000\000\000\000\000\255\255\255\255\000\000\
    \000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\037\000\038\000\000\000\000\000\037\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \037\000\010\000\035\000\025\000\000\000\007\000\005\000\071\000\
    \020\000\019\000\008\000\009\000\017\000\018\000\011\000\036\000\
    \034\000\032\000\029\000\031\000\028\000\027\000\030\000\027\000\
    \033\000\027\000\014\000\016\000\013\000\003\000\012\000\015\000\
    \072\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\024\000\069\000\023\000\004\000\026\000\
    \059\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\022\000\006\000\021\000\070\000\065\000\
    \066\000\062\000\061\000\058\000\043\000\042\000\043\000\050\000\
    \050\000\050\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\040\000\063\000\052\000\063\000\
    \080\000\039\000\050\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\064\000\079\000\064\000\
    \060\000\026\000\060\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\057\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\054\000\
    \027\000\027\000\027\000\027\000\027\000\068\000\000\000\068\000\
    \001\000\027\000\027\000\033\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\053\000\027\000\027\000\
    \027\000\033\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\067\000\
    \000\000\067\000\056\000\037\000\056\000\076\000\000\000\037\000\
    \000\000\000\000\000\000\000\000\056\000\000\000\056\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\000\000\037\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\078\000\000\000\000\000\
    \000\000\000\000\077\000\000\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\051\000\050\000\049\000\050\000\000\000\048\000\
    \047\000\050\000\047\000\000\000\051\000\050\000\049\000\050\000\
    \000\000\048\000\255\255\050\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\000\000\000\000\000\000\000\000\000\000\045\000\
    \000\000\000\000\000\000\041\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\054\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\054\000\027\000\027\000\027\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \055\000\000\000\055\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\074\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\005\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\
    \018\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\006\000\012\000\
    \012\000\013\000\013\000\025\000\035\000\039\000\044\000\048\000\
    \049\000\052\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\036\000\061\000\051\000\061\000\
    \077\000\036\000\051\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\012\000\078\000\012\000\
    \013\000\026\000\013\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\065\000\255\255\065\000\
    \000\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\066\000\
    \255\255\066\000\028\000\037\000\028\000\073\000\255\255\037\000\
    \255\255\255\255\255\255\255\255\029\000\255\255\029\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\255\255\037\000\045\000\045\000\045\000\045\000\045\000\
    \045\000\045\000\045\000\045\000\045\000\073\000\255\255\255\255\
    \255\255\255\255\073\000\255\255\045\000\045\000\045\000\045\000\
    \045\000\045\000\047\000\047\000\047\000\047\000\255\255\047\000\
    \033\000\047\000\033\000\255\255\056\000\056\000\056\000\056\000\
    \255\255\056\000\035\000\056\000\044\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\045\000\045\000\045\000\045\000\
    \045\000\045\000\255\255\255\255\255\255\255\255\255\255\034\000\
    \255\255\255\255\255\255\039\000\046\000\046\000\046\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\046\000\046\000\046\000\
    \046\000\046\000\046\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\054\000\054\000\054\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\054\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\046\000\046\000\046\000\
    \046\000\046\000\046\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \054\000\255\255\054\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\073\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\022\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\025\000\000\000\000\000\028\000\
    \031\000\000\000\000\000\034\000\037\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_backtrk_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\010\000\010\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\022\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\010\000\000\000\000\000\
    \000\000\010\000\010\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_default_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_trans_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\001\000\001\000\001\000\000\000\001\000\000\000\
    \001\000\000\000\000\000\000\000\004\000\019\000\007\000\013\000\
    \016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000";
  Lexing.lex_check_code =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\031\000\000\000\255\255\032\000\255\255\
    \000\000\255\255\255\255\255\255\000\000\013\000\000\000\012\000\
    \012\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_code =
   "\255\003\255\255\002\255\255\001\255\255\000\255\255\005\255\255\
    \006\255\255\004\255\255\000\003\255\000\002\255\000\004\255\000\
    \001\255\000\006\255\000\005\255";
}

let rec main lexbuf =
  lexbuf.Lexing.lex_mem <- Array.make 7 (-1); __ocaml_lex_main_rec lexbuf 0
and __ocaml_lex_main_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 119 "src/lexer.mll"
            ( Lexing.new_line lexbuf; main lexbuf )
# 420 "src/lexer.ml"

  | 1 ->
# 120 "src/lexer.mll"
            ( main lexbuf )
# 425 "src/lexer.ml"

  | 2 ->
# 122 "src/lexer.mll"
         ( comment 0 lexbuf; main lexbuf )
# 430 "src/lexer.ml"

  | 3 ->
# 124 "src/lexer.mll"
                          ( Lexing.new_line lexbuf; main lexbuf )
# 435 "src/lexer.ml"

  | 4 ->
# 125 "src/lexer.mll"
                          ( main lexbuf )
# 440 "src/lexer.ml"

  | 5 ->
let
# 127 "src/lexer.mll"
                    s
# 446 "src/lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) (lexbuf.Lexing.lex_curr_pos + -1) in
# 127 "src/lexer.mll"
                           ( STRING s )
# 450 "src/lexer.ml"

  | 6 ->
let
# 130 "src/lexer.mll"
                         s
# 456 "src/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 131 "src/lexer.mll"
      ( INT (Bigint.of_string s) )
# 460 "src/lexer.ml"

  | 7 ->
let
# 133 "src/lexer.mll"
                        s
# 466 "src/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 134 "src/lexer.mll"
      ( INT (Bigint.of_string s) )
# 470 "src/lexer.ml"

  | 8 ->
let
# 136 "src/lexer.mll"
              s
# 476 "src/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 137 "src/lexer.mll"
      ( odfl (NID s) (Hash.find_option keywords s) )
# 480 "src/lexer.ml"

  | 9 ->
let
# 139 "src/lexer.mll"
             sw
# 486 "src/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -1)
and
# 139 "src/lexer.mll"
                                s
# 491 "src/lexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_curr_pos + -1) in
# 139 "src/lexer.mll"
                                                  ( SWSIZE(mksizesign sw s)  )
# 495 "src/lexer.ml"

  | 10 ->
let
# 140 "src/lexer.mll"
              r
# 501 "src/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_mem.(0)
and
# 140 "src/lexer.mll"
                                s
# 506 "src/lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_mem.(0)
and
# 140 "src/lexer.mll"
                                               g
# 511 "src/lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_mem.(0) + 1) lexbuf.Lexing.lex_curr_pos in
# 140 "src/lexer.mll"
                                                  ( SVSIZE(mkvsizesign r s g))
# 515 "src/lexer.ml"

  | 11 ->
# 141 "src/lexer.mll"
         ( SHARPLBRACKET )
# 520 "src/lexer.ml"

  | 12 ->
# 142 "src/lexer.mll"
            ( SHARP      )
# 525 "src/lexer.ml"

  | 13 ->
# 143 "src/lexer.mll"
            ( LBRACKET   )
# 530 "src/lexer.ml"

  | 14 ->
# 144 "src/lexer.mll"
            ( RBRACKET   )
# 535 "src/lexer.ml"

  | 15 ->
# 145 "src/lexer.mll"
            ( LBRACE     )
# 540 "src/lexer.ml"

  | 16 ->
# 146 "src/lexer.mll"
            ( RBRACE     )
# 545 "src/lexer.ml"

  | 17 ->
# 147 "src/lexer.mll"
            ( LPAREN     )
# 550 "src/lexer.ml"

  | 18 ->
# 148 "src/lexer.mll"
            ( RPAREN     )
# 555 "src/lexer.ml"

  | 19 ->
# 149 "src/lexer.mll"
            ( RARROW     )
# 560 "src/lexer.ml"

  | 20 ->
# 150 "src/lexer.mll"
            ( COMMA      )
# 565 "src/lexer.ml"

  | 21 ->
# 151 "src/lexer.mll"
            ( SEMICOLON  )
# 570 "src/lexer.ml"

  | 22 ->
# 152 "src/lexer.mll"
            ( QUESTIONMARK  )
# 575 "src/lexer.ml"

  | 23 ->
# 153 "src/lexer.mll"
            ( COLON  )
# 580 "src/lexer.ml"

  | 24 ->
# 155 "src/lexer.mll"
                            ( LTLT            )
# 585 "src/lexer.ml"

  | 25 ->
let
# 156 "src/lexer.mll"
                        s
# 591 "src/lexer.ml"
= Lexing.sub_lexeme_char_opt lexbuf lexbuf.Lexing.lex_mem.(0) in
# 156 "src/lexer.mll"
                            ( LE   (mk_sign s) )
# 595 "src/lexer.ml"

  | 26 ->
let
# 157 "src/lexer.mll"
                        s
# 601 "src/lexer.ml"
= Lexing.sub_lexeme_char_opt lexbuf lexbuf.Lexing.lex_mem.(0) in
# 157 "src/lexer.mll"
                            ( LT   (mk_sign s) )
# 605 "src/lexer.ml"

  | 27 ->
let
# 158 "src/lexer.mll"
                        s
# 611 "src/lexer.ml"
= Lexing.sub_lexeme_char_opt lexbuf lexbuf.Lexing.lex_mem.(0) in
# 158 "src/lexer.mll"
                            ( GTGT (mk_sign s) )
# 615 "src/lexer.ml"

  | 28 ->
let
# 159 "src/lexer.mll"
                        s
# 621 "src/lexer.ml"
= Lexing.sub_lexeme_char_opt lexbuf lexbuf.Lexing.lex_mem.(0) in
# 159 "src/lexer.mll"
                            ( GE   (mk_sign s) )
# 625 "src/lexer.ml"

  | 29 ->
let
# 160 "src/lexer.mll"
                        s
# 631 "src/lexer.ml"
= Lexing.sub_lexeme_char_opt lexbuf lexbuf.Lexing.lex_mem.(0) in
# 160 "src/lexer.mll"
                            ( GT   (mk_sign s) )
# 635 "src/lexer.ml"

  | 30 ->
# 162 "src/lexer.mll"
         ( DOT      )
# 640 "src/lexer.ml"

  | 31 ->
# 163 "src/lexer.mll"
         ( BANG     )
# 645 "src/lexer.ml"

  | 32 ->
# 164 "src/lexer.mll"
         ( PLUS     )
# 650 "src/lexer.ml"

  | 33 ->
# 165 "src/lexer.mll"
         ( MINUS    )
# 655 "src/lexer.ml"

  | 34 ->
# 166 "src/lexer.mll"
         ( STAR     )
# 660 "src/lexer.ml"

  | 35 ->
# 167 "src/lexer.mll"
         ( SLASH    )
# 665 "src/lexer.ml"

  | 36 ->
# 168 "src/lexer.mll"
         ( PERCENT  )
# 670 "src/lexer.ml"

  | 37 ->
# 169 "src/lexer.mll"
         ( PIPE     )
# 675 "src/lexer.ml"

  | 38 ->
# 170 "src/lexer.mll"
         ( AMP      )
# 680 "src/lexer.ml"

  | 39 ->
# 171 "src/lexer.mll"
         ( HAT      )
# 685 "src/lexer.ml"

  | 40 ->
# 172 "src/lexer.mll"
         ( AMPAMP   )
# 690 "src/lexer.ml"

  | 41 ->
# 173 "src/lexer.mll"
         ( PIPEPIPE )
# 695 "src/lexer.ml"

  | 42 ->
# 174 "src/lexer.mll"
         ( EQ       )
# 700 "src/lexer.ml"

  | 43 ->
# 175 "src/lexer.mll"
         ( EQEQ     )
# 705 "src/lexer.ml"

  | 44 ->
# 176 "src/lexer.mll"
         ( BANGEQ   )
# 710 "src/lexer.ml"

  | 45 ->
let
# 178 "src/lexer.mll"
         c
# 716 "src/lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 178 "src/lexer.mll"
            ( invalid_char (L.of_lexbuf lexbuf) c )
# 720 "src/lexer.ml"

  | 46 ->
# 179 "src/lexer.mll"
            ( EOF )
# 725 "src/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_main_rec lexbuf __ocaml_lex_state

and comment lvl lexbuf =
   __ocaml_lex_comment_rec lvl lexbuf 73
and __ocaml_lex_comment_rec lvl lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 183 "src/lexer.mll"
                     ( if lvl <= 0 then () else comment (lvl-1) lexbuf )
# 737 "src/lexer.ml"

  | 1 ->
# 184 "src/lexer.mll"
                     ( comment (lvl+1) lexbuf )
# 742 "src/lexer.ml"

  | 2 ->
# 185 "src/lexer.mll"
                     ( Lexing.new_line lexbuf; comment lvl lexbuf )
# 747 "src/lexer.ml"

  | 3 ->
# 186 "src/lexer.mll"
                     ( comment lvl lexbuf )
# 752 "src/lexer.ml"

  | 4 ->
# 187 "src/lexer.mll"
                     ( unterminated_comment (L.of_lexbuf lexbuf) )
# 757 "src/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_comment_rec lvl lexbuf __ocaml_lex_state

;;

