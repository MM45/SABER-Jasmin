/*** auxilliary_load_16u16.jahh: File containing an auxilliary Jasmin function, used to load 16 u16 integers into a single u256 integer ***/

#ifndef LOAD_16U16_HH
#define LOAD_16U16_HH

#include "SABER_params.jahh"

inline fn load_16u16(reg u256 r, stack u16[16] buf) -> reg u256
{
	inline int i;

	reg u128 x;
	reg u128 y;

	reg u256 t256;

	x = zero_u128;
	y = zero_u128;
	r = zero_u256;

	for i = 0 to 8 {
		x = #VPINSR_8u16(x, buf[i], i);
		y = #VPINSR_8u16(y, buf[8 + i], 8 + i);
	}

	r = #VINSERTI128(r, x, 0);
	r = #VINSERTI128(r, y, 1);

/*
	t256 = (256u) buf[0];
	t256 <<= 16 * 15;
	r = t256;
	for i = 1 to 16 {
		t256 = (256u) buf[i];
		t256 <<= 16 * (15 - i);
		r |= t256;
	}
*/
	return r;
}

#endif