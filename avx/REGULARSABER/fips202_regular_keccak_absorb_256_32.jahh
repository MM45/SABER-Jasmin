/*** fips202_regular_keccak_absorb_256_32.jahh: File containing the Jasmin implementation of keccak_absorb function from fips202.c, where rate == SHA3256RATE, mlen == 32 and with (regular) SABER parameters ***/

#ifndef KECCAK_ABSORB_256_32_HH
#define KECCAK_ABSORB_256_32_HH

#include "SABER_params.jahh"

inline fn keccak_absorb_256_32(reg ptr u64[25] s, reg ptr u8[32] m) -> reg ptr u64[25]
{
	inline int i;
	inline int j;

	reg u8 t8;

	reg u64 t64;
	reg u64 tt;

	stack u8[200] t;

	for i = 0 to SHA3_256_RATE {
		t[i] = 0;
	}

	for i = 0 to 32 {
		t8 = m[i];
		t[i] = t8;
	}

	t[32] = 0x06;
	t[SHA3_256_RATE - 1] |= 128;

	for i = 0 to (SHA3_256_RATE / 8) {
		t64 = (64u) t[8 * i];
		
		tt = (64u) t[8 * i + 1];
		tt <<= 8;
		t64 |= tt;

		tt = (64u) t[8 * i + 2];
		tt <<= 16;
		t64 |= tt;

		tt = (64u) t[8 * i + 3];
		tt <<= 24;
		t64 |= tt;

		tt = (64u) t[8 * i + 4];
		tt <<= 32;
		t64 |= tt;

		tt = (64u) t[8 * i + 5];
		tt <<= 40;
		t64 |= tt;

		tt = (64u) t[8 * i + 6];
		tt <<= 48;
		t64 |= tt;

		tt = (64u) t[8 * i + 7];
		tt <<= 56;
		t64 |= tt;
		
		s[i] ^= t64;
	}

	return s;
}

#endif